Упрощенное вычисление логических операторов
########################################################################################################################

Логические операторы && и || по-разному обрабатывают значения разных типов. Они преобразуют значение с левой стороны
от оператора в логический тип, чтобы решить, что делать, но в зависимости от оператора и результата преобразования
они возвращают либо исходное левое значение, либо правое значение.

Например, оператор || вернет значение, расположенное слева от него, если оно может быть преобразовано в true,
в противном случае он вернет значение, расположенное справа. Этот эффект ожидаем, если оба значения
являются логическими либо аналогичными значениями других типов.

console.log(null || "user")
// → user
console.log("Agnes" || "user")
// → Agnes

Мы можем использовать подобную функциональность как способ вернуться к значению по умолчанию. Если у нас есть значение,
которое может быть пустым, то мы можем поставить после него || и затем - заменяющее значение.
Если исходное значение может быть преобразовано в false, то мы получим вместо него замену. Согласно правилам
преобразования строк и чисел в логические значения, 0, NaN и пустая строка("") эквивалентны false, тогда как все - true.

Оператор && работает похожим образом, но наоборот. Когда значение слева от него может быть преобразовано в false,
то возвращается это значение; в противном случае он возвращает значение, расположенное справа.
Другим важным свойством двух данных операторов является то, что их правая часть вычисляется только при необходимости.
Например, в случае true || х, независимо от того, что такое х - даже если какое-то ужасное выражение, - результатом
будет true и х никогда не будет вычислен. То же самое относится к false && х, чьим результатом является false:
х будет игнорироваться.
Это называется упрощенным вычислением.
Условный оператор работает аналогичным образом. Из второго и третьего значений вычисляется только то, которое бьло выбрано.